//=============================================================
//	---------
//	-	주석..
//	---------
//		-	프로그램 실행과 상관없이
//			코드에 설명을 붙히는 기능..
//
//		-	장점..
//			-	코드의 가독성 증가..
//			-	임시 코드 작성..
//
//		-	단점..
//			-	주석이 너무 많으면
//				오히려 가독성 저하..
//		-	주석 종류..
//			-	라인 주석..
//				-	한줄짜리 주석..
//				-	// Java 주석
//			-	범위 주석..
//				-	/*
//  					이 주석 역시
//  					JavaScript, CSS와 동일하다.
//					*/
//			-	문서 주석..
//				-	JavaDoc를 만들 때 주로 사용하여
//					해당 API를 설명할때 사용..			
//				-	/**
//					*문서 주석 소개하는 API입니다.
//					*
//					*@author enai
//					*@param type 선택한 언어
//					*@return type이 Java라면 true, 그 외엔 false를 반환한다.
//					*@version 1.0
//					*/
//
//
//	------------------
//	-	실행문과 세미콜론..
//	------------------
//
//		----------
//		-	실행문..
//		----------
//
//			-	변수 선언, 값 저장, 메소드 호출 등
//				특정 기능처리를 담당하는 코드..
//		
//
//		---------------
//		-	세미콜론( ; )
//		---------------
//
//			-	실행문이 끝났음을 표시해주는 역할..	
//	
//			-	세미콜론이 빠지면 컴파일러가 에러로 판단..
//
//				예)	int x = 1; int y = 2;
//					
//					int result = 
//					x + y;
//=============================================================
//	패키지 선언..
package sector01.exam01;

/*	
	클래스 선언..
	
	-	public class..
		ㄴ	공개 클래스
		
	-	Hello..
		ㄴ	클래스 이름..
		ㄴ	클래스 이름은 소스 파일이름과
			동일해야하며 대소문자도 일치해야 함..
*/

/*
	-	javac 명령어로 컴파일 하면
		[ 클래스이름.class ]라는
	 	바이트 코드 파일이 생성됨..
	 	
	 	ㄴ	일반적으로 [ 클래스이름.class ]를
	 		바이트 코드파일이라 부르지않고
	 		[ 클래스이름 클래스 ]라고 부름..
	 		
	 -	java 명령어로 바이트 코드 파일을 실행하려면
	 				( 클래스 파일 )
	 	main 메소드 블록이 있어야 함..
*/
public class Hello
//	클래스 블록 시작..
{

	/*
		main 메소드 선언부..
		
		-	java 명령어로 클래스 파일을 실행하면
		 	가장 먼저 main 메소드를 찾아
		 	블록 내부를 실행..
		 	
		 	ㄴ	main 메소드를 프로그램 실행
		 	 	진입점이라고 부름..
		 	 	( entry point.. )
	*/
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		System.out.println("Hello, Java");		

	}

//	클래스 블록 끝..
}
//=============================================================
/*
 *	[ 참고 ]
 *
 *		코드에 메모하는 법 - 주석(Comment)
 * 		https://enai.tistory.com/46
 */
//=============================================================